using <stdlib.h> as stdlib;

/**
 */
export fntype malloc_fn(usize size) -> void mut *;
export fntype free_fn(void *ptr) -> void;

/**
 */
static malloc_fn mut malloc_impl = (malloc_fn) stdlib::malloc;
static free_fn mut free_impl = (free_fn) stdlib::free;

/**
 */
export fn set_malloc(malloc_fn new_malloc_impl) {
  malloc_impl = new_malloc_impl;
}

/**
 */
export fn set_free(free_fn new_free_impl) {
  free_impl = new_free_impl;
}

/**
 */
export fn malloc(usize size) -> void mut * where size > 0 model safe(return) {
  static_attest(safe(malloc_impl));
  void mut *ptr = malloc_impl(size);
  static_attest(safe(ptr));
  return ptr;
}

/**
 */
export fn free(void mut *ptr) model len(ptr) > 0 {
  static_attest(len(ptr) > 0);
  static_attest(safe(free_impl));
  free_impl(ptr);
}
